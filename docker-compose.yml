version: "3"
services: 
  apache: 
    container_name: dev-apache
    image: bitnami/apache
    ports:
      - "80:8083"
      - "443:8443"
    environment:
      - APACHE_HTTP_PORT_NUMBER=8083
    volumes:
      - "./db/apache-data/conf/httpd.conf:/opt/bitnami/apache/conf/httpd.conf"

  jenkins:
    container_name: dev-jenkins
    build: 
      context: .
      dockerfile: jenkins.Dockerfile
    image: jenkins-with-docker:lts
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
    volumes:
      - "./db/jenkins-data/:/var/jenkins_home"
      - "jenkins-docker-certs:/certs/client:ro"
      - "//var/run/docker.sock:/var/run/docker.sock"

  nexus:
    container_name: dev-nexus
    build: 
      context: .
      dockerfile: nexus3.Dockerfile
    image: nexus3:lts
    environment:
      - "INSTALL4J_ADD_VM_PARAMS=-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Djava.util.prefs.userRoot=/nexus-data/javaprefs"
      - "NEXUS_CONTEXT=nexus"
    volumes:
      - "./db/nexus-data:/nexus-data"

  sonarqube: 
    container_name: dev-sonarqube 
    image: sonarqube:lts-community
    environment:
      - "SONAR_WEB_CONTEXT=/sonarqube"
    volumes:
      - "./db/sonar-data/data:/opt/sonarqube/data"
      - "./db/sonar-data/extensions:/opt/sonarqube/extensions"
      - "./db/sonar-data/logs:/opt/sonarqube/logs"

volumes:
  jenkins-docker-certs: